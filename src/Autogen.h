#pragma once
#include <pebble.h>
//THIS HEADER WAS AUTOGENERATED, PLEASE DO NOT EDIT

typedef struct schemeposition {
  int x;
  int y;
} SchemePosition;

typedef struct transfer {
  int prevStation;
  int toStation;
  int nextStation;
  int poslen;
  int *pos;
} Transfer;

typedef struct boardinfo {
  int exitlen;
  int *exit;
  int transferlen;
  Transfer *transfer;
} BoardInfo;

typedef struct station {
  //int id;
  int line;
  //SchemePosition schemePosition;
  char *name;
  BoardInfo boardInfo;
} Station;

typedef struct link {
  int to;
  int weight;
  //int type;
} Link;

typedef struct line {
    char *name;
    GColor color;
    int stations;
    int startfrom;
} Line;

typedef struct vector {
  int size;
  int realsize;
  Link *arr;
} Vector;


int stationlen;
Station *stations;
Vector *links;
Line *lines;
uint8_t *graph_index;

void vector_init(Vector *where);

void vector_push(Vector *where, Link what);

void vector_free(Vector *where);

void deinit_autogen();

void init_autogen();

